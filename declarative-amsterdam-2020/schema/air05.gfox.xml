<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Now we start to connect the resources: we add a constraint which looks not only
    at the resource to be validated, but also a second resource and requires the
    two to be somehow related. Most often, "looking at resources" means evaluating 
    expressions in their context - one expression in the context of the first 
    resource, another expression in the context of the other resource. And the 
    relationship between the resources is observed by comparing the two values.
    
    A ValueCompared constraint is thus composed of 
    (a) a specification which resource(s) to use as the second resource, 
    (b) an expression to be evaluated in the context of the resource to be evaluated, 
    (c) an expression to be evaluated in the context of the second resource, and 
    (d) further attributes or child elements specifying what to expect from the pair 
        of expression values.
        
    Here, we check that the @country value in the XML file is equal to the 
    corresponding "country" in the accompanying JSON document. So the "partner"
    of the comparison is a JSON document, which is selected by the @foxpath
    expression on <valueCompared>. Note that this is only one of several ways
    how the partner resource can be selected.
    
    Also note that the JSON document is parsed into an XML node tree and thus
    made accessible to XPath navigation. XPath everywhere!
-->
<greenfox greenfoxURI="http://www.greenfox.org/ns/dc2020/air01"
          xmlns="http://www.greenfox.org/ns/schema">

    <context>
        <field name="domain" value="${schemaPath}\..\..\data\air"/>
    </context>    
    <domain path="${domain}" name="Some root folder">
        
        <!-- VISIT index folder -->
        <folder foxpath="airports\index" id="indexFolderShape">
            <targetSize count="1" countMsg="Missing folder"/>

            <!-- CHECK: folder content -->
            <folderContent closed="true">
                <memberFiles names="airports.xml airports.json"/>
                <memberFiles names="airports-*.xml airports-*.json" maxCount="100"/>
                <memberFile name="*.FLAG" minCount="1"/>
            </folderContent>
            
            <!-- VISIT: FLAG files -->
            <file foxpath="*.FLAG">
                <targetSize minCount="1" minCountMsg="Missing FLAG file"/>
                
                <!-- CHECK: file empty -->
                <fileSize eq="0" eqMsg="FLAG file not empty"/>
            </file>
            
            <file foxpath="airports-*.xml">
                <targetSize minCount="2" minCountMsg="Too few country airport files"/>
                
                <!-- CHECK: resource values -->
                <values>
                    <value exprXP="//type" 
                           eq="airport" eqMsg="Type not 'airport'"/>
                    <value exprXP="//altitude" 
                           lt="1000" useDatatype="integer" ltMsg="Airport too high"/>
                    <value exprXP="//@icao" 
                           matches="^[A-Z]{4}" matchesMsg="ICAO not four capital latin letters"/>
                    <value exprXP="//(latitude, longitude)" 
                           datatype="decimal" datatypeMsg="Latitude or longitude not decimal"/>
                    <value exprXP="//airport/@id" 
                           minCount="1"
                           distinct="true"/>                        
                </values>
                
                <!-- CHECK: resource value pairs -->
                <valuePairs>
                    <valuePair expr1XP="/*/@country" minCount1="1"
                               expr2XP="$fileName ! replace(., '.*-(.*).xml', '$1')"
                               cmp="eq" cmpMsg="Country name in attribute and file name different"
                               useString="lc"/>
                </valuePairs>
                
                <!-- CHECK: resource values compared "across resource boundaries" -->
                <valuesCompared foxpath="fox-sibling($fileName, '.xml', '.json')" targetMediatype="json" countTargetResources="1">
                    <valueCompared expr1XP="/*/@country" minCount1="1"
                                   expr2XP="/json/airportsForCountry/country"
                                   cmp="eq" cmpMsg="Country name in XML and JSON different"/>
                </valuesCompared>
                
            </file>
        </folder>
    </domain>

</greenfox>


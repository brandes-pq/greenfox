<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Demonstrates the use of constraint component ExprValueEq, using a Foxpath expression.
    An additional ExprValueMinCount constraint ensures that successful validation is
    not possible without evaluation of the ExprValueEq constraint.
    
    The schema checks that all files matching a pattern of folder and file names contain
    at a given location a given string.
    
    This example uses an expression yielding several value items, and no quantifier (@quant)
    is specified. As the default quantifier is 'all', successful validation requires that all
    items satisfy the condition. The same behaviour is obtained when using an attribute 
    @quant='all'.
    
    Constraint components:
    * Name:  ExprValueEq 
    - XML:   foxpath/(@expr, @eq) 
    - Check: Every item of the expression value must be equal to the value given by @eq.
    
    * Name:  ExprValueMinCount 
    - XML:   foxpath/(@expr, @minCount) 
    - Check: The number of value items must be at least the number specified by @minCount.
-->
<greenfox greenfoxURI="http://www.greenfox.org/ns/schema-examples/demo-constraint-component/xpath-eq-foxpath"
          xmlns="http://www.greenfox.org/ns/schema">

    <context>
        <field name="domain" value="${schemaPath}\..\..\..\..\..\..\example-data"/>
    </context>
    
    <domain path="${domain}" name="greenfox-example-data">
        <folder foxpath="airports" id="airportsFolderShape">
            <targetSize countMsg="Missing folder: airports" count="1"/>     
            <!-- All value items must satisfy the condition -->     
            <file foxpath=".\\airport-*.xml">
                <targetSize minCountMsg="Less airport descriptions than expected" minCount="65"/>
                <xpath expr="$fileName"
                       quant="some"
                       eqFoxpath="let $country := $filePath\..\file-name(.) 
                                  let $countryFile := $filePath\..\..\*[file-name(.) eq concat('airports-', $country, '.xml')]
                                  let $countryDoc := $countryFile ! doc(.)
                                  return $countryDoc//@href/substring-after(., concat($country, '/'))"
                       eqFoxpathMsg="Airport description without reference from country file"/>
            </file>
        </folder>
    </domain>

</greenfox>


<?xml version="1.0" encoding="UTF-8"?>
<greenFox xmlns="http://www.greenfox.org/ns/schema" greenfoxURI="http://www.greenfox.org/ns/schema-examples">
    <context>
        <field name="lastModified" value="2019-12-01"/>
    </context>    
    <domain path="\tt\greenfox\resources\example-system" label="system-abc">    
        
        <!-- *** Root folder containing the test system *** -->
        <folder foxpath="system-abc"> 
            <targetSize msg="Expecting exactly one folder 'system-abc" count="1"/>
            
            <!-- *** File consistency checks -->
            <foxpath msg="getFoo*.xml OK but no fooValue" count="0" expr="
                .\\getFooRS*.xml[//*:returnCode eq 'OK'][not(//*:fooValue)]"/>
            
            <foxpath msg="getFoo*.json OK but no fooValue" count="0" expr="
                .\\getFooRS*.json\json-doc(.)[//*:returnCode eq 'OK'][not(//*:fooValue)]"/>

            <foxpath msg="config with invalid return code" expr="
                .\\msg-config.csv\csv-doc(., 'comma', 'yes')//returnCode">                
                <some>
                    <eq>OK</eq>
                    <eq>NOFIND</eq>
                    <like>ERROR_*</like>
                </some>     

            </foxpath>
            
            <!-- *** Folder containing a single test *** -->
            <folder foxpath=".\\test-*[input][output][config]">
                <targetSize msg="Test system without tests" minCount="1"/>
                
                <folder foxpath="config">
                    <targetSize msg="Config folder missing." count="1"/>
                    
                    <file foxpath="msg-config.csv" mediatype="csv" csv.withHeader="yes">
                        <targetSize msg="Config file missing" count="1"/>

                        <!-- Check - configured return codes ok? -->
                        <xpath expr="//returnCode">
                            <some>
                                <eq>OK</eq>
                                <eq>NOFIND</eq>
                                <like>ERROR_*</like>
                            </some>                                
                        </xpath>
                        
                    </file>
                </folder>
                
                <!-- ===================
                      X M L   t e s t s 
                     =================== -->
                
                <!-- *** XML input folder (containing request messages) *** -->
                <folder foxpath="input[*.xml]">
                    
                    <!-- *** XML request message *** -->
                    <file foxpath="*">
                        <targetSize msg="Input folder without request msgs" minCount="1"/>
                        
                        <!-- Check - request with response ? -->
                        <foxpath msg="Request without response" count="1" expr="
                            let $expFileNameRS := file-name(.) ! replace(., 'RQ(\d*).xml$', 'RS$1.xml')    
                            return ..\..\output\*[file-name(.) eq $expFileNameRS]" />
                    </file>
                </folder>
                
                <!-- *** XML output folder (containing response messages) *** -->                
                <folder foxpath="output[*.xml]">
                    
                    <!-- *** XML response message *** -->                    
                    <file foxpath="*">
                        <!-- *** Check - response fresh? *** -->
                        <lastModified msg="Stale output file" ge="${lastModified}"/>
                        
                        <!-- *** Check - return code ok? *** -->
                        <foxpath msg="Return code != configured value" eq="true" expr="
                            let $actReturnCode := doc(.)//*:returnCode
                            let $expReturnCode :=
                                let $fileName := file-name(.)
                                let $cfgDoc := ..\..\config\msg-config.csv\csv-doc(., ',', 'yes')
                                return $cfgDoc//record[response eq $fileName]/returnCode                            
                            return $actReturnCode = $expReturnCode"/>
                    </file>
                </folder>
                
                <!--  =====================
                       J S O N   t e s t s 
                      ===================== -->
                
                <!-- *** JSON input folder (containing request messages) *** -->                
                <folder foxpath="input[*.json]">
                    
                    <!-- *** JSON request message *** -->                    
                    <file foxpath="*" mediatype="json">
                        <targetSize msg="Input folder without request msgs" minCount="1"/>
                        
                        <!-- *** Check - request with response ? *** -->
                        <foxpath msg="Request without response" count="1" expr="
                            let $expFileNameRS := file-name(.) ! replace(., 'RQ(\d*).json$', 'RS$1.json')    
                            return ..\..\output\*[file-name(.) eq $expFileNameRS]" />
                    </file>
                </folder>               
                
                <!-- *** JSON output folder (containing response messages) *** -->
                <folder foxpath="output[*.json]">
                    
                    <!-- *** JSON response message *** -->                    
                    <file foxpath="*" mediatype="json">
                        <!-- *** Check - response fresh? *** -->
                        <lastModified msg="Stale output file" ge="${lastModified}"/>
                        
                        <!-- *** Check - return code ok? *** -->                        
                        <foxpath msg="Return code != configured value" eq="true" expr="
                            let $actReturnCode := json-doc(.)//*:returnCode
                            let $expReturnCode :=
                                let $fileName := file-name(.)
                                let $cfgDoc := ..\..\config\msg-config.csv\csv-doc(., ',', 'yes')
                                return $cfgDoc//record[response eq $fileName]/returnCode                            
                            return $actReturnCode = $expReturnCode"/>                        
                    </file>
                </folder>
            </folder>
        </folder>
    </domain>    
</greenFox>
